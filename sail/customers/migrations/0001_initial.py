# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-10-19 15:33
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_text', models.CharField(max_length=20, verbose_name='姓名')),
                ('address_text', models.CharField(blank=True, max_length=100, verbose_name='地址')),
                ('mobile1_text', models.CharField(blank=True, max_length=30, verbose_name='工作手机号码')),
                ('mobile2_text', models.CharField(blank=True, max_length=30, verbose_name='家庭手机号码')),
                ('phone1_text', models.CharField(blank=True, max_length=30, verbose_name='固定电话')),
                ('phone2_text', models.CharField(blank=True, max_length=30, verbose_name='固定电话2')),
                ('email', models.CharField(blank=True, max_length=30, verbose_name='Email')),
                ('comment_text', models.CharField(blank=True, max_length=1000, verbose_name='备注')),
                ('add_date', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
            ],
            options={
                'verbose_name': '联系人信息',
                'verbose_name_plural': '联系人信息',
            },
        ),
        migrations.CreateModel(
            name='CostInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_name_text', models.CharField(max_length=100, verbose_name='成本名称')),
                ('cost_price_float', models.FloatField(default=0, verbose_name='价格')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_company_name_text', models.CharField(max_length=50, verbose_name='公司名称')),
                ('customer_company_address_text', models.CharField(blank=True, max_length=100, verbose_name='地址')),
                ('customer_add_date', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
                ('customer_company_invoice_text', models.CharField(blank=True, max_length=50, verbose_name='发票抬头')),
                ('customer_comment_text', models.CharField(blank=True, max_length=1000, verbose_name='备注')),
            ],
            options={
                'verbose_name': '客户信息',
                'verbose_name_plural': '客户信息',
            },
        ),
        migrations.CreateModel(
            name='CustomerTransGoodsInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trans_goods_name_text', models.CharField(max_length=100, verbose_name='货物名称')),
                ('trans_goods_num_int', models.IntegerField(default=0, verbose_name='数量')),
                ('trans_goods_color_text', models.CharField(max_length=100, verbose_name='颜色')),
                ('trans_goods_offer_int', models.IntegerField(default=0, verbose_name='报价')),
                ('trans_goods_price_int', models.IntegerField(default=0, verbose_name='单价')),
                ('trans_goods_cost_int', models.IntegerField(default=0, verbose_name='成本')),
                ('trans_goods_processing_charge_int', models.IntegerField(default=0, verbose_name='加工成本')),
                ('trans_goods_other_charge_int', models.IntegerField(default=0, verbose_name='其它成本')),
                ('trans_goods_payment_int', models.IntegerField(default=0, verbose_name='货款')),
                ('trans_goods_comment_text', models.CharField(blank=True, max_length=1000, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerTransInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trans_name_text', models.CharField(max_length=100, verbose_name='名称')),
                ('trans_handler_name_text', models.CharField(max_length=100, verbose_name='经办人')),
                ('trans_total_num_int', models.IntegerField(blank=True, default=0, verbose_name='数量')),
                ('trans_payment_int', models.IntegerField(blank=True, default=0, verbose_name='货款')),
                ('trans_fax_int', models.IntegerField(blank=True, default=0, verbose_name='税点')),
                ('trans_expenses_int', models.IntegerField(blank=True, default=0, verbose_name='运费')),
                ('trans_other_charge_int', models.IntegerField(blank=True, default=0, verbose_name='其它成本')),
                ('trans_date', models.DateTimeField(blank=True, verbose_name='交易日期')),
                ('trans_delivery_date', models.DateTimeField(blank=True, null=True, verbose_name='交货日期')),
                ('trans_order_number_text', models.CharField(blank=True, max_length=100, verbose_name='订单号')),
                ('trans_comment_text', models.CharField(blank=True, max_length=1000, verbose_name='备注')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='GoodsInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goods_name_text', models.CharField(max_length=100, verbose_name='名称')),
                ('goods_price_float', models.FloatField(default=0, verbose_name='单价')),
                ('goods_cost_float', models.FloatField(default=0, verbose_name='进货价')),
                ('add_date', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
                ('comment_text', models.CharField(blank=True, max_length=1000, verbose_name='备注')),
            ],
            options={
                'verbose_name': '货物信息',
                'verbose_name_plural': '货物信息',
            },
        ),
        migrations.CreateModel(
            name='PictureInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture_name_text', models.CharField(blank=True, max_length=100, verbose_name='名称')),
                ('picture_path_text', models.CharField(max_length=100, verbose_name='图片路径名')),
                ('comment_text', models.CharField(blank=True, max_length=1000, verbose_name='备注')),
                ('goods_info_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.GoodsInfo')),
            ],
        ),
        migrations.CreateModel(
            name='ProviderInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name_text', models.CharField(max_length=50, verbose_name='公司名称')),
                ('company_address_text', models.CharField(blank=True, max_length=100, verbose_name='地址')),
                ('add_date', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
                ('comment_text', models.CharField(blank=True, max_length=1000, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='TransCostInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.CostInfo')),
            ],
        ),
        migrations.CreateModel(
            name='TransGoodsCostInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.CostInfo')),
            ],
        ),
        migrations.CreateModel(
            name='TransGoodsInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_int', models.IntegerField(default=0, verbose_name='数量')),
                ('price_float', models.FloatField(default=0, verbose_name='成交单价')),
                ('price_quoted_float', models.FloatField(default=0, verbose_name='报价')),
                ('goods_color_text', models.CharField(max_length=100, verbose_name='颜色')),
                ('comment_text', models.CharField(blank=True, max_length=1000, verbose_name='备注')),
                ('goods_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.GoodsInfo')),
            ],
            options={
                'verbose_name': '交易货物信息',
                'verbose_name_plural': '交易货物信息',
            },
        ),
        migrations.CreateModel(
            name='TransInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trans_name_text', models.CharField(max_length=100, verbose_name='交易名称')),
                ('trans_order_number_text', models.CharField(blank=True, max_length=100, verbose_name='订单号')),
                ('trans_fax_int', models.IntegerField(blank=True, default=0, verbose_name='税点')),
                ('trans_date', models.DateField(blank=True, null=True, verbose_name='交易日期')),
                ('goods_delivery_date', models.DateField(blank=True, null=True, verbose_name='交货日期')),
                ('add_date', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
                ('comment_text', models.CharField(blank=True, max_length=1000, verbose_name='备注')),
                ('contact_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.ContactInfo')),
                ('customer_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Customer')),
            ],
            options={
                'verbose_name': '交易信息',
                'verbose_name_plural': '交易信息',
            },
        ),
        migrations.AddField(
            model_name='transgoodsinfo',
            name='trans_key',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.TransInfo'),
        ),
        migrations.AddField(
            model_name='transgoodscostinfo',
            name='trans_goods_info_key',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.TransGoodsInfo'),
        ),
        migrations.AddField(
            model_name='transcostinfo',
            name='trans_info_key',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.TransInfo'),
        ),
        migrations.AddField(
            model_name='goodsinfo',
            name='goods_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.ProviderInfo'),
        ),
        migrations.AddField(
            model_name='customertransgoodsinfo',
            name='customer_trans_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.CustomerTransInfo'),
        ),
        migrations.AddField(
            model_name='contactinfo',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.Customer'),
        ),
    ]
